# libcprops - c prototyping tools Makefile
#
# This is the Makefile for libcprops - c prototyping tools. If it has the name 
# "Makefile.in" then it is a template for a Makefile;  to generate the actual 
# Makefile, run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the actual 
# Makefile.
#
# Copyright (c) 2005, 2006 by Ilan Aelion
# iaelion@users.sourceforge.net
# 
# 2006-02-21 V 0.1.6
#
###############################################

srcdir = .
prefix = /usr/local
exec_prefix = ${prefix}

subdirs =  svc svc/cpsp

CPROPSVERSION = 0.1.6
CPROPSLIBVERSION = 10:0:0

# top_builddir is needed for the $(LIBTOOL) definition

top_builddir := /home/eric/thread_software/libcprops-0.1.6

bindir = $(DESTDIR)${exec_prefix}/bin
libdir = $(DESTDIR)${exec_prefix}/lib
incdir = $(DESTDIR)${prefix}/include/cprops
mandir = $(DESTDIR)${prefix}/man
datadir = $(DESTDIR)${prefix}/share

man3dir = $(mandir)/man3

# OPT_OBJS = db.o
OPT_OBJS = 
OPT_TARGETS = 
OPT_INSTALL= 

OBJS   =  log.o collection.o mempool.o vector.o str.o \
		  linked_list.o hashtable.o \
		  hashlist.o rb.o  \
		  thread.o $(OPT_OBJS)
LOBJS  =  $(OBJS:.o=.lo)		  
HEADER =  cp_config.h common.h collection.h mempool.h log.h \
		  vector.h str.h linked_list.h  \
		  hashtable.h hashlist.h rb.h  \
	  	  thread.h $(OPT_OBJS:.o=.h)

TEST_SRC = testhttpsrv.c
TEST_OBJ = $(TEST_SRC:.c=.o)
TEST_BIN = $(TEST_SRC:.c=)

CC      =  gcc
CFLAGS  =  -fPIC -D_REENTRANT  -D_REENTRANT -D_GNU_SOURCE -O2 
SED     =  /bin/sed
DEFS    =  -DHAVE_CONFIG_H
LDFLAGS =   -L/usr/lib
LIBS    =  -ldl  -lpthread 
LIBTOOL =  $(SHELL) $(top_builddir)/libtool
SHELL   =  /bin/sh

MAKEDEPEND = /home/eric/thread_software/libcprops-0.1.6/makedepend.sh

INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644

PGSQL_SRC=
PGSQL_OBJ=
PGSQL_HDR=
PGSQL_CFLAGS=
PGSQL_LDFLAGS=
PGSQL_LIBS=
CP_DBMS_PGSQL_LIBVERSION=

MYSQL_SRC=
MYSQL_OBJ=
MYSQL_HDR=
MYSQL_CFLAGS=
MYSQL_LDFLAGS=
MYSQL_LIBS=
CP_DBMS_MYSQL_LIBVERSION=

DEPEND=$(MAKEDEPEND) $(CFLAGS)


main: libcprops.a main.c
	$(CC) $(CFLAGS) main.c $(LIBS) $(LDFLAGS) -L. -lcprops -o main

all_old: libcprops.la $(OPT_TARGETS) $(subdirs)

.PHONY: all $(subdirs) clean clean-recursive distclean distclean-recursive \
        install install-libcprops install-recursive \
		uninstall uninstall-recursive \
		install-libcp-dbms-postgres install-libcp-dbms-mysql  

libcprops.a: $(OBJS)
	ar cru libcprops.a $(OBJS)

$(subdirs):
	(cd $@ && $(MAKE) || fail=yes; cd $(top_builddir); test -z "$$fail")


libcprops.la: $(OBJS)
	$(LIBTOOL) --mode=link $(CC) $(CFLAGS) -rpath $(libdir) \
		-version-info '$(CPROPSLIBVERSION)' -export-dynamic \
		-o libcprops.la $(LOBJS)

$(PGSQL_OBJ): $(PGSQL_SRC) $(PGSQL_HDR)
	$(LIBTOOL) --mode=compile $(CC) $(PGSQL_CFLAGS) $(DEFS) -c $(PGSQL_SRC)

libcp_dbms_postgres.la: libcprops.la $(PGSQL_OBJ)
	$(LIBTOOL) --mode=link $(CC) $(PGSQL_CFLAGS) -rpath $(libdir) \
		-version-info '$(CP_DBMS_PGSQL_LIBVERSION)' -export-dynamic \
		$(PGSQL_LDFLAGS) -o libcp_dbms_postgres.la $(PGSQL_OBJ:.o=.lo) \
		$(PGSQL_LIBS)

db_mysql.o: db_mysql.c db_mysql.h
	$(LIBTOOL) --mode=compile $(CC) $(MYSQL_CFLAGS) $(DEFS) -c $<

libcp_dbms_mysql.la: libcprops.la db_mysql.o
	$(LIBTOOL) --mode=link $(CC) $(MYSQL_CFLAGS) -rpath $(libdir) \
		-version-info '$(CP_DBMS_MYSQL_LIBVERSION)' -export-dynamic \
		$(MYSQL_LDFLAGS) -o libcp_dbms_mysql.la $(MYSQL_OBJ:.o=.lo) \
		$(MYSQL_LIBS)

test: $(TEST_BIN)

$(TEST_BIN): $(TEST_OBJ) all
	$(CC) $(CFLAGS) -L .libs $(LDFLAGS) -o $@ $(@:=).o -lcprops $(LIBS)

$(TEST_OBJ): $(TEST_SRC)
	$(CC) $(CFLAGS) -c $(LDFLAGS) -o $@ $(@:.o=.c)

.c.o:
	#$(LIBTOOL) --mode compile $(CC) $(CFLAGS) $(DEFS) -c $<
	$(CC) $(CFLAGS) $(DEFS) -c $<

install: install-libcprops $(OPT_INSTALL) install-recursive

install-libcp-dbms-postgres: all installdirs
	@echo "installing postgres dbms driver libcp_dbms_postgres.so"
	$(LIBTOOL) --mode=install $(INSTALL) libcp_dbms_postgres.la \
	           $(libdir)/libcp_dbms_postgres.la
	@$(INSTALL_DATA) $(PGSQL_HDR) $(incdir)
	$(LIBTOOL) --finish $(libdir)

install-libcp-dbms-mysql: all installdirs
	@echo "installing mysql dbms driver libcp_dbms_mysql.so"
	$(LIBTOOL) --mode=install $(INSTALL) libcp_dbms_mysql.la \
	           $(libdir)/libcp_dbms_mysql.la
	@$(INSTALL_DATA) $(MYSQL_HDR) $(incdir)
	$(LIBTOOL) --finish $(libdir)

install-libcprops: all installdirs
	@echo "Installing libcprops"
	$(LIBTOOL) --mode=install $(INSTALL) libcprops.la $(libdir)/libcprops.la
	@$(INSTALL_DATA) $(HEADER) $(incdir)
	@ls man3/ | grep -v CVS | sed 's/^/man3\//' > .manpages
	@$(INSTALL_DATA) `cat .manpages` $(man3dir)
	rm -f .manpages
	$(LIBTOOL) --finish $(libdir)

installdirs:
	$(SHELL) ${srcdir}/mkinstalldirs $(libdir) $(man3dir) $(incdir)

install-recursive:
	@list='$(subdirs)'; \
	for subdir in $$list; do \
	  (cd $$subdir && $(MAKE) install) || fail=yes; \
	done; \
	test -z "$$fail"

uninstall: uninstall-recursive
	@echo "Uninstalling libcprops"
	$(LIBTOOL) --mode=uninstall $(libdir)
	@echo removing header files
	if [ -d $(incdir) ]; then \
		pushd $(incdir) ; \
		rm -f $(HEADER) ; \
		popd; \
	fi
	@echo removing man pages
	ls man3/ | grep -v CVS | sed "s|^|$(man3dir)/|" > .manpages
	rm -f `cat .manpages`
	rm -f .manpages

uninstall-recursive: 
	@list='$(subdirs)'; \
	for subdir in $$list; do \
	  (cd $$subdir && $(MAKE) uninstall) || fail=yes; \
	done; \
	test -z "$$fail"

clean: clean-recursive
	rm -rf core* *.o *.lo *.loT *.la *.so *.a .libs/* $(TEST_BIN) test*.log

clean-recursive:
	@list='$(subdirs)'; \
	for subdir in $$list; do \
	  (cd $$subdir && $(MAKE) clean) || fail=yes; \
	done; \
	test -z "$$fail"

distclean: clean
	rm -rf Makefile config.cache cp_config.h config.log config.status autom4te.cache aclocal.m4 libtool

$(OBJS): Makefile

depend: $(OBJS:.o=.c)
	@$(DEPEND) $(OBJS:.o=.c) > /dev/null 2>&1
# DO NOT DELETE

util.o: cp_config.h
util.o: common.h
util.o: log.h
util.o: str.h
log.o: log.h
log.o: common.h
log.o: str.h
log.o: cp_config.h
log.o: hashtable.h
log.o: collection.h
collection.o: collection.h
collection.o: common.h
collection.o: log.h
collection.o: str.h
collection.o: cp_config.h
mempool.o: mempool.h
mempool.o: common.h
mempool.o: collection.h
mempool.o: log.h
mempool.o: str.h
mempool.o: cp_config.h
mempool.o: rb.h
mempool.o: vector.h
mempool.o: hashtable.h
vector.o: log.h
vector.o: common.h
vector.o: str.h
vector.o: cp_config.h
str.o: str.h
str.o: common.h
str.o: cp_config.h
str.o: log.h
linked_list.o: linked_list.h
linked_list.o: common.h
linked_list.o: cp_config.h
linked_list.o: collection.h
linked_list.o: log.h
linked_list.o: str.h
linked_list.o: mempool.h
linked_list.o: rb.h
linked_list.o: vector.h
linked_list.o: hashtable.h
heap.o: heap.h
heap.o: cp_config.h
heap.o: common.h
heap.o: collection.h
heap.o: log.h
heap.o: str.h
priority_list.o: collection.h
priority_list.o: common.h
priority_list.o: log.h
priority_list.o: str.h
priority_list.o: cp_config.h
priority_list.o: priority_list.h
priority_list.o: linked_list.h
priority_list.o: mempool.h
priority_list.o: rb.h
priority_list.o: vector.h
priority_list.o: hashtable.h
hashtable.o: hashtable.h
hashtable.o: common.h
hashtable.o: collection.h
hashtable.o: log.h
hashtable.o: str.h
hashtable.o: cp_config.h
hashtable.o: linked_list.h
hashtable.o: mempool.h
hashtable.o: rb.h
hashtable.o: vector.h
hashtable.o: thread.h
hashtable.o: hashlist.h
hashlist.o: collection.h
hashlist.o: common.h
hashlist.o: log.h
hashlist.o: str.h
hashlist.o: cp_config.h
hashlist.o: hashlist.h
hashlist.o: hashtable.h
hashlist.o: linked_list.h
hashlist.o: mempool.h
hashlist.o: rb.h
hashlist.o: vector.h
mtab.o: mtab.h
mtab.o: common.h
mtab.o: cp_config.h
rb.o: collection.h
rb.o: common.h
rb.o: log.h
rb.o: str.h
rb.o: cp_config.h
rb.o: vector.h
rb.o: rb.h
rb.o: mempool.h
rb.o: hashtable.h
sorted_hash.o: collection.h
sorted_hash.o: common.h
sorted_hash.o: log.h
sorted_hash.o: str.h
sorted_hash.o: cp_config.h
sorted_hash.o: vector.h
sorted_hash.o: sorted_hash.h
sorted_hash.o: mempool.h
sorted_hash.o: rb.h
sorted_hash.o: hashtable.h
nary.o: vector.h
thread.o: thread.h
thread.o: common.h
thread.o: cp_config.h
thread.o: collection.h
thread.o: log.h
thread.o: str.h
thread.o: linked_list.h
thread.o: mempool.h
thread.o: rb.h
thread.o: vector.h
thread.o: hashtable.h
thread.o: hashlist.h
